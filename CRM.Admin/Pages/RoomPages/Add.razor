@page "/rooms/add"

<MudCard ClassList="mt-4">
    <MudCardHeader ClassList="d-flex justify-center">
        <h3>Add New Room</h3>
    </MudCardHeader>
    <MudCardContent>
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudTextField @bind-Value="room.RoomName" Label="Room Name" Variant="Variant.Outlined" Required="true"></MudTextField>
            </MudItem>
            <MudItem xs="12" md="3">
                <MudTextField @bind-Value="room.Qavat" Label="Qavat" Variant="Variant.Outlined" InputType="InputType.Number" Required="true"></MudTextField>
            </MudItem>
            <MudItem xs="12" md="3">
                <MudTextField @bind-Value="room.Sigimi" Label="Sigimi" Variant="Variant.Outlined" InputType="InputType.Number" Required="true"></MudTextField>
            </MudItem>
        </MudGrid>
    </MudCardContent>
    <MudCardActions Class="d-flex justify-content-around">
        <MudButton @onclick="SaveRoom" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
        <MudButton @onclick="Cancel" ClassList="ms-2" Variant="Variant.Filled">Cancel</MudButton>
    </MudCardActions>
</MudCard>

@code {
    @inject HttpClient httpClient
    @inject NavigationManager navigation
    @inject ISnackbar Snackbar

    private Room room = new Room();

    private async Task SaveRoom()
    {
        try
        {
            var json = JsonSerializer.Serialize(room);
            var data = new StringContent(json, Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync(Constants.BASE_URL + "rooms/create-room", data);

            if (response.IsSuccessStatusCode)
            {
                Snackbar.Add("Room added successfully!", Severity.Success);
                navigation.NavigateTo("/rooms");
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                Snackbar.Add(responseContent, Severity.Error);
            }
            else
            {
                Snackbar.Add("Something went wrong!", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel()
    {
        navigation.NavigateTo("/rooms");
    }
}
